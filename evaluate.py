'''
Created on Jun 5, 2016

@author: lxh5147
'''
from utilities import run
from convert_to_liblinear import Corpus
import argparse
from feature_extractor import feature_extractors
from predict import PREDICT_CMD

def evaluate(model_file_path, lable_feature_map_file_path, feature_extractors, input_file_path, prediction_output_file_path):
    # build corpus for evaluation
    liblinear_file_path = input_file_path + ".liblinear"
    corpus = Corpus(input_file_path, lable_feature_map_file_path, feature_extractors)
    corpus.build(liblinear_file_path, is_for_training = False)
    run(PREDICT_CMD + " -q -b 1 %s %s %s" % (liblinear_file_path, model_file_path, prediction_output_file_path))

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description = 'Predict categories for all files under the prediction file root')
    parser.add_argument('eval_file_root', metavar = 'EVAL_FILE_ROOT', help = 'root directory of all files to be evaluated, organized into sub directories and with sub directory name as the category name')
    parser.add_argument('--model', help = 'model file path')
    parser.add_argument('--map', help = 'category and feature map file path')
    parser.add_argument('--eval_input_file', nargs = '?', help = 'generated evaluation input file')
    parser.add_argument('--eval_file_path', help = 'evaluation file generated by liblinear')

    args = parser.parse_args()
    eval_input_file = args.eval_input_file
    if eval_input_file is None:
        eval_input_file = "eval.input"
    Corpus.build_corpus_input_file(args.eval_file_root, eval_input_file)
    evaluate(args.model, args.map, feature_extractors, eval_input_file, args.eval_file_path)
